@inherits UmbracoViewPage<StatusMessage>
@*
	Expected View Data:
	-------------------
	StandardInfo (object - StandardViewInfo)		: Version, Current environment, etc.
	Status (object - StatusMessage)					: Status of operations

*@
@{
	var paramStandardInfo = Mvc.GetSafeViewData(ViewData, "StandardInfo", new StandardViewInfo()) as StandardViewInfo;
	var paramStatus = Mvc.GetSafeViewData(ViewData, "Status", new StatusMessage()) as StatusMessage;

	StatusMessage message = Model;
	var templatesUsedOnContent = Dragonfly.UmbracoHelpers.Mvc.GetSafeViewData(ViewData, "TemplatesUsedOnContent") as GroupingCollection<AuditableContent>;
	var templatesNotUsedOnContent = Dragonfly.UmbracoHelpers.Mvc.GetSafeViewData(ViewData, "TemplatesNotUsedOnContent") as List<ITemplate>;

	var counter = 0;
	var Title = Dragonfly.UmbracoHelpers.Mvc.GetSafeViewDataString(ViewData, "Title", "Template Usage Report");
}

<!DOCTYPE html>
<html>
<head>
	<title>@Title</title>
	<link href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" rel="stylesheet" />
	<link href="https://cdnjs.cloudflare.com/ajax/libs/datatables/1.10.12/css/dataTables.bootstrap.min.css" rel="stylesheet" />

	@*<style>
	{

	}
	</style>*@
	@*<!--<script src="/scripts/snippet-javascript-console.min.js?v=1"></script>-->*@
</head>
<body>
	<div class="container-full" style="margin: 0 10px;">

		<h1>@Title</h1>

		@if (templatesNotUsedOnContent != null)
		{
			<h2>Templates Not In Use on Content: @templatesNotUsedOnContent.Count()</h2>
			if (templatesNotUsedOnContent.Any())
			{
				<ul>
					@foreach (var template in templatesNotUsedOnContent)
					{
						var editUrl = "/umbraco#/settings/templates/edit/" + template.Id;
						<li>
							<a href="@editUrl" target="_blank"> @template.Alias</a>
							@if(template.IsMasterTemplate)
							{
								<span style="color: red;">(Master)</span>
							}
						</li>
					}
				</ul>
			}
		}

		@if (templatesUsedOnContent != null)
		{
			<h2>Templates In Use on Content</h2>

			<table id="umbracodata" class="table table-striped table-bordered table-hover table-sm" cellspacing="0" style="width: 100%;">
				<thead>
					<tr>
						<th>#</th>
						<th>Template</th>
						<th>Qty of Content Nodes</th>
					</tr>
				</thead>
				<tbody>
					@foreach (var t in templatesUsedOnContent.Groups)
					{
						counter++;

						<tr>
							@*// #*@
							<td>@counter</td>

							@*//Template*@
							<td>@t.GroupName["Key"]</td>

							@*//Qty of Content Nodes*@
							<td>@t.Collection.Count()</td>

						</tr>
					}

				</tbody>
				<tfoot>
					<tr>
						<td>#</td>
						<th>Template</th>
						<th>Qty of Content Nodes</th>
					</tr>
				</tfoot>
			</table>
		}
	</div>

	<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.1.1/jquery.min.js"></script>
	<script src="https://cdnjs.cloudflare.com/ajax/libs/datatables/1.10.12/js/jquery.dataTables.min.js"></script>
	<script src="https://cdnjs.cloudflare.com/ajax/libs/datatables/1.10.12/js/dataTables.bootstrap.min.js"></script>
	<script type="text/javascript">
		$(document).ready(function () {
			// Setup - add a text input to each footer cell
			$('#umbracodata tfoot th').each(function () {
				var title = $(this).text();
				$(this).html('<input type="text" style="font-size:10px; width:100%;" placeholder="Search ' + title + '" />');
			});

			// DataTable
			$('#umbracodata').DataTable({
				initComplete: function () {
					// Apply the search
					this.api().columns().every(function () {
						var that = this;

						$('input', this.footer()).on('keyup change clear', function () {
							if (that.search() !== this.value) {
								that
									.search(this.value)
									.draw();
							}
						});
					});
				}
			});

		});
	</script>
</body>
</html>